{"ast":null,"code":"var _jsxFileName = \"/Users/jenniferchinzi/Desktop/CodeFellows/401/todo/src/components/todo/todo.js\";\nimport React, { useEffect, useState } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport './todo.scss';\n\nfunction ToDo() {\n  const [list, setList] = useState([]);\n\n  const addItem = item => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  };\n\n  const toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let updatedList = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(updatedList);\n    }\n  };\n\n  useEffect(() => {\n    let updatedList = [{\n      _id: 1,\n      complete: false,\n      text: 'Clean the Kitchen',\n      difficulty: 3,\n      assignee: 'Person A'\n    }, {\n      _id: 2,\n      complete: false,\n      text: 'Do the Laundry',\n      difficulty: 2,\n      assignee: 'Person A'\n    }, {\n      _id: 3,\n      complete: false,\n      text: 'Walk the Dog',\n      difficulty: 4,\n      assignee: 'Person B'\n    }, {\n      _id: 4,\n      complete: true,\n      text: 'Do Homework',\n      difficulty: 3,\n      assignee: 'Person C'\n    }, {\n      _id: 5,\n      complete: false,\n      text: 'Take a Nap',\n      difficulty: 1,\n      assignee: 'Person B'\n    }];\n    setList(updatedList);\n  }, []);\n  useEffect(() => document.title = `To Do List: ${list.length}`, [list]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    bg: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"ToDo List Manager (\", list.length, \")\")))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    handleSubmit: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoList, {\n    list: list,\n    handleComplete: toggleComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }))))));\n}\n\nexport default ToDo;","map":{"version":3,"sources":["/Users/jenniferchinzi/Desktop/CodeFellows/401/todo/src/components/todo/todo.js"],"names":["React","useEffect","useState","TodoForm","TodoList","Container","Row","Col","Navbar","Nav","ToDo","list","setList","addItem","item","_id","Math","random","complete","toggleComplete","id","filter","i","updatedList","map","listItem","text","difficulty","assignee","document","title","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n\n\nimport './todo.scss';\n\nfunction ToDo() {\n\n  const [list, setList] = useState([])\n\n  const addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  };\n\n  const toggleComplete = id => {\n\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let updatedList = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(updatedList);\n    }\n\n  };\n\n  useEffect(() => {\n    let updatedList = [\n      { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A' },\n      { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A' },\n      { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B' },\n      { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C' },\n      { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B' },\n    ];\n\n    setList(updatedList);\n  }, []);\n\n  useEffect(() => (\n    document.title = `To Do List: ${list.length}`\n  ), [list]);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n        <header>\n          <Navbar>\n            <Nav bg=\"dark\">\n          <h2>\n            ToDo List Manager ({list.length})\n          </h2>\n\n            </Nav>\n          </Navbar>\n        </header>\n        </Col>\n        </Row>\n        <Row>\n          <Col>\n\n        <section className=\"todo\">\n\n          <div>\n            <TodoForm handleSubmit={addItem} />\n          </div>\n\n          <div>\n            <TodoList\n              list={list}\n              handleComplete={toggleComplete}\n              />\n          </div>\n        </section>\n              </Col>\n\n      </Row>\n    </Container>\n  );\n}\n\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}